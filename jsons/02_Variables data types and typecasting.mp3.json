{
    "chunks": [
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 0.0,
            "end": 23.6,
            "text": " So with full enthusiasm, we will start Python programming.  First of all, I want to tell you that this Python refresher will be short to the point  and you will be able to start it with data science.  Not just this course, whenever I study, my motive is that I should at least understand you more.  So here, as you can see, I have made a folder in the name of data science course."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 23.6,
            "end": 45.4,
            "text": " You can also make a folder somewhere because things are organized quite well.  Here you will see what I will do now. I will open Anaconda prompt.  So I will open Anaconda prompt here and after opening Anaconda prompt, we will do the CD in this location.  Now what does this CD mean? You copy this path here and after that you write CD here  and write this path in this double quotes."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 45.4,
            "end": 64.6,
            "text": " What will happen with this is that your Anaconda prompt will be opened in this particular location.  After that, either you make a virtual environment or you can work with the base.  I am also working with the base to start with.  But what will I do here now? I will start the Jupyter Lab.  So I wrote Jupyter Space Lab."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 64.6,
            "end": 82.6,
            "text": " And as soon as I write Jupyter Space Lab, my Jupyter Lab will be opened.  And here you can see that this Jupyter Lab is open.  So this Jupyter Lab is launched.  Now here I am showing you an Anaconda Assistant.  So I don't want to use Anaconda Assistant for now."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 82.8,
            "end": 97.8,
            "text": " Now this is from me.  Jupyter Lab Development Team is excited to have a robust third party extension community.  So if you want to use it, you can use it.  Basically, this extension is in VS Code.  Now for this, don't worry about it."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 97.8,
            "end": 117.0,
            "text": " But I will show you how you can make a new notebook.  So if you click on the folder, you will get the contents of this particular folder.  Even if you open the terminal,  it will be in the data science course folder.  So you can always make a dedicated folder."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 117.0,
            "end": 133.0,
            "text": " That is the best thing.  So here we have made a folder called data science course.  And in it we are going to make all the iPython notebooks.  So what I will do now is I will open a new tab.  And here I want to make an iPython notebook with my base ENV."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 133.0,
            "end": 148.2,
            "text": " This is the option that you are giving me.  You can make a notebook with books ENV as your environment.  Which we made earlier.  If you have made a virtual environment, you can make your iPython notebook with that virtual environment.  Here I will make it with the base."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 148.2,
            "end": 163.2,
            "text": " And as you can see, my iPython notebook is open.  This is asking me, would you like to get notified?  I will do no.  And to remove this Anaconda Assistant, I will click here.  And now I am getting a good place here."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 163.39999999999998,
            "end": 178.39999999999998,
            "text": " So I will rename it first.  To rename it, you can click on the right click.  And I will name it as Python Basics.  So I will do the work. I will give it a numbering.  So I will give it 01 underscore python underscore basics.iPyn."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 178.39999999999998,
            "end": 193.6,
            "text": " So here we are going to learn some basic basics of Python.  So Python is a dynamically typed object oriented programming language.  And it is a general purpose scripting language.  Which you can use to develop web development.  For data science."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 193.6,
            "end": 208.6,
            "text": " You can use it for general purpose scripting.  For example, if you want to make a utility which  moves the files of a particular folder in a different folder  you can do all this with the help of Python.  Along with that, you can make a GUI with the help of Python."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 208.6,
            "end": 223.79999999999998,
            "text": " Python is very famous for its readability.  To make a variable in Python, you can make it like this.  You will say a is equal to 5. And to run it in Jupyter,  you can enter it as you enter the control.  And after that, you will click on the bottom."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 223.79999999999998,
            "end": 238.79999999999998,
            "text": " Otherwise, you can click on the plus button and make a new cell.  As I have written, b is equal to 32.  And as soon as I enter the control,  it will execute.  Now if I enter the A plus,"
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 238.79999999999998,
            "end": 254.0,
            "text": " you can see that it has become 37.  If I want to save this notebook, I will do the control S.  You can click on the kernel and restart the kernel.  And run all cells.  And this will make all the cells run."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 254.0,
            "end": 269.0,
            "text": " You can make the variables in Python like this.  As you saw, the variables in Python were numbers.  If I want, I can make strings.  Like I can write str is equal to Harry.  And now if I enter the control, it will be Harry."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 269.0,
            "end": 284.2,
            "text": " I will name it name is equal to Harry.  Now I will tell you the difference between the control and the shift enter.  If I enter the control,  this cell executes and you stay in the same cell.  If you enter the shift,"
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 284.2,
            "end": 299.2,
            "text": " this cell executes and you come into a new cell.  If you enter the shift,  if you want to write the code,  you can enter the control.  You can save the notebook by controlling it."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 299.4,
            "end": 314.4,
            "text": " If you want to save the computer,  you should not have any problem.  We have seen how you can make variables in Python.  If you want to print anything,  you can use the print function."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 314.4,
            "end": 328.59999999999997,
            "text": " You can write H-E-L-L-O.  After writing the world, I will hit the control enter.  And you see, I stayed in the same cell and the world output came.  If I entered the shift, I would have gone to the other cell.  You can print anything."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 328.59999999999997,
            "end": 343.59999999999997,
            "text": " If you want to write some comments,  you can write a single line comment.  This is a comment.  If I enter the control,  there will be no difference in the line."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 343.59999999999997,
            "end": 358.8,
            "text": " These lines are used to add information.  In Jupyter, we do markdown videos.  Most of the cases, we use less comments.  Yes, sometimes, we use comments like this.  You can see, this will print"
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 358.8,
            "end": 373.8,
            "text": " Hello World on the screen.  I entered the control,  and this will print Hello World.  You can see the variables, data types.  Data types automatically get inferred."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 373.8,
            "end": 389.0,
            "text": " A is equal to 5, meaning A is an integer.  If I enter the control,  and if I enter the type of A,  you can see the class has entered.  This is an integer variable."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 389.0,
            "end": 404.0,
            "text": " At the same time, if I enter the type of name  and enter the shift,  it automatically shows the class str.  It shows the type of variable  and tells the type itself."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 404.0,
            "end": 419.2,
            "text": " When I wrote the name in double quotes,  it was understood that this is a string.  This is the basic basic of printing.  How do we make a comment?  This is a single line comment."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 419.2,
            "end": 434.2,
            "text": " You can make a multi line comment like this.  I have already told you about the variables.  You don't have to tell what integer, class,  what string, or boolean are.  You have to store any integer."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 434.2,
            "end": 448.4,
            "text": " You can write x is equal to 10.  y is equal to 3.14.  The point of this is enough to explain the Python.  This is a floating point number.  The name is equal to Jack."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 448.4,
            "end": 463.4,
            "text": " If it is written in double quotes, it automatically gets inferred.  If we write this v, jacked like this,  then it will be true.  I have made a variable like this.  You can do this easily."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 463.59999999999997,
            "end": 478.59999999999997,
            "text": " You can do type checking like this.  You can do type casting like this.  I will tell you how to find the type.  I will tell you how to do type casting.  I want to tell you one thing."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 478.59999999999997,
            "end": 493.8,
            "text": " I used print function.  If I write type of name here,  and enter the shift,  then the Jupyter Notebook automatically shows us the output.  We don't need to print function to see the output."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 493.8,
            "end": 508.8,
            "text": " I have written type of name here.  It automatically told me here.  I have written a is equal to 4.566.  I have written b is equal to 5.677.  If I write in double quotes,"
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 508.8,
            "end": 524.0,
            "text": " then it will be a string.  Now I will write print a plus b.  Now tell me what will be the print.  Many people think that these numbers will add up.  But it doesn't."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 524.0,
            "end": 539.0,
            "text": " I will enter the shift here.  Since these are strings, it becomes a concatenation.  If you want these numbers to sum up,  then you will write print and say  integer version of a plus integer version of b."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 539.0,
            "end": 554.2,
            "text": " Once again, I will not write print.  We don't need to print.  I will enter.  This is 5677 and 4566.  It has added up to 10243."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 554.2,
            "end": 569.2,
            "text": " You can type casting here.  This is called type casting in Python.  I am giving you a refresher  of Python.  If you want to learn Python from the beginning,"
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 569.2,
            "end": 584.4000000000001,
            "text": " then you can access this course.  This course is in English.  There are coding exercises, downloadable resources, handbooks.  You can grab these.  I will move on to the next topic."
        },
        {
            "number": "2",
            "title": "Variables data types and typecasting",
            "start": 584.4000000000001,
            "end": 590.4000000000001,
            "text": " We will move on to the next topic.  See you in the next video."
        }
    ],
    "text": " So with full enthusiasm, we will start Python programming. First of all, I want to tell you that this Python refresher will be short to the point and you will be able to start it with data science. Not just this course, whenever I study, my motive is that I should at least understand you more. So here, as you can see, I have made a folder in the name of data science course. You can also make a folder somewhere because things are organized quite well. Here you will see what I will do now. I will open Anaconda prompt. So I will open Anaconda prompt here and after opening Anaconda prompt, we will do the CD in this location. Now what does this CD mean? You copy this path here and after that you write CD here and write this path in this double quotes. What will happen with this is that your Anaconda prompt will be opened in this particular location. After that, either you make a virtual environment or you can work with the base. I am also working with the base to start with. But what will I do here now? I will start the Jupyter Lab. So I wrote Jupyter Space Lab. And as soon as I write Jupyter Space Lab, my Jupyter Lab will be opened. And here you can see that this Jupyter Lab is open. So this Jupyter Lab is launched. Now here I am showing you an Anaconda Assistant. So I don't want to use Anaconda Assistant for now. Now this is from me. Jupyter Lab Development Team is excited to have a robust third party extension community. So if you want to use it, you can use it. Basically, this extension is in VS Code. Now for this, don't worry about it. But I will show you how you can make a new notebook. So if you click on the folder, you will get the contents of this particular folder. Even if you open the terminal, it will be in the data science course folder. So you can always make a dedicated folder. That is the best thing. So here we have made a folder called data science course. And in it we are going to make all the iPython notebooks. So what I will do now is I will open a new tab. And here I want to make an iPython notebook with my base ENV. This is the option that you are giving me. You can make a notebook with books ENV as your environment. Which we made earlier. If you have made a virtual environment, you can make your iPython notebook with that virtual environment. Here I will make it with the base. And as you can see, my iPython notebook is open. This is asking me, would you like to get notified? I will do no. And to remove this Anaconda Assistant, I will click here. And now I am getting a good place here. So I will rename it first. To rename it, you can click on the right click. And I will name it as Python Basics. So I will do the work. I will give it a numbering. So I will give it 01 underscore python underscore basics.iPyn. So here we are going to learn some basic basics of Python. So Python is a dynamically typed object oriented programming language. And it is a general purpose scripting language. Which you can use to develop web development. For data science. You can use it for general purpose scripting. For example, if you want to make a utility which moves the files of a particular folder in a different folder you can do all this with the help of Python. Along with that, you can make a GUI with the help of Python. Python is very famous for its readability. To make a variable in Python, you can make it like this. You will say a is equal to 5. And to run it in Jupyter, you can enter it as you enter the control. And after that, you will click on the bottom. Otherwise, you can click on the plus button and make a new cell. As I have written, b is equal to 32. And as soon as I enter the control, it will execute. Now if I enter the A plus, you can see that it has become 37. If I want to save this notebook, I will do the control S. You can click on the kernel and restart the kernel. And run all cells. And this will make all the cells run. You can make the variables in Python like this. As you saw, the variables in Python were numbers. If I want, I can make strings. Like I can write str is equal to Harry. And now if I enter the control, it will be Harry. I will name it name is equal to Harry. Now I will tell you the difference between the control and the shift enter. If I enter the control, this cell executes and you stay in the same cell. If you enter the shift, this cell executes and you come into a new cell. If you enter the shift, if you want to write the code, you can enter the control. You can save the notebook by controlling it. If you want to save the computer, you should not have any problem. We have seen how you can make variables in Python. If you want to print anything, you can use the print function. You can write H-E-L-L-O. After writing the world, I will hit the control enter. And you see, I stayed in the same cell and the world output came. If I entered the shift, I would have gone to the other cell. You can print anything. If you want to write some comments, you can write a single line comment. This is a comment. If I enter the control, there will be no difference in the line. These lines are used to add information. In Jupyter, we do markdown videos. Most of the cases, we use less comments. Yes, sometimes, we use comments like this. You can see, this will print Hello World on the screen. I entered the control, and this will print Hello World. You can see the variables, data types. Data types automatically get inferred. A is equal to 5, meaning A is an integer. If I enter the control, and if I enter the type of A, you can see the class has entered. This is an integer variable. At the same time, if I enter the type of name and enter the shift, it automatically shows the class str. It shows the type of variable and tells the type itself. When I wrote the name in double quotes, it was understood that this is a string. This is the basic basic of printing. How do we make a comment? This is a single line comment. You can make a multi line comment like this. I have already told you about the variables. You don't have to tell what integer, class, what string, or boolean are. You have to store any integer. You can write x is equal to 10. y is equal to 3.14. The point of this is enough to explain the Python. This is a floating point number. The name is equal to Jack. If it is written in double quotes, it automatically gets inferred. If we write this v, jacked like this, then it will be true. I have made a variable like this. You can do this easily. You can do type checking like this. You can do type casting like this. I will tell you how to find the type. I will tell you how to do type casting. I want to tell you one thing. I used print function. If I write type of name here, and enter the shift, then the Jupyter Notebook automatically shows us the output. We don't need to print function to see the output. I have written type of name here. It automatically told me here. I have written a is equal to 4.566. I have written b is equal to 5.677. If I write in double quotes, then it will be a string. Now I will write print a plus b. Now tell me what will be the print. Many people think that these numbers will add up. But it doesn't. I will enter the shift here. Since these are strings, it becomes a concatenation. If you want these numbers to sum up, then you will write print and say integer version of a plus integer version of b. Once again, I will not write print. We don't need to print. I will enter. This is 5677 and 4566. It has added up to 10243. You can type casting here. This is called type casting in Python. I am giving you a refresher of Python. If you want to learn Python from the beginning, then you can access this course. This course is in English. There are coding exercises, downloadable resources, handbooks. You can grab these. I will move on to the next topic. We will move on to the next topic. See you in the next video."
}